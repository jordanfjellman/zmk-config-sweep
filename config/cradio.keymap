/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left_thumb {
            bindings = <&lt 3 ESCAPE>;
            key-positions = <30 31>;
        };

        combo_right_thumb {
            bindings = <&kp DELETE>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &mt LA(LC(LG(LEFT_SHIFT))) E  &mt LA(LC(LEFT_SHIFT)) R  &kp T      &kp Y      &mt RA(RC(RIGHT_SHIFT)) U  &mt RA(RC(RG(RIGHT_SHIFT))) I  &kp O         &kp P
&hm LCTRL A  &hm LSHIFT S  &hm LALT D                    &hm LCMD F                &kp G      &kp H      &hm RCMD J                 &hm RALT K                     &hm RSHIFT L  &hm RCTRL SEMI
&kp Z        &kp X         &kp C                         &kp V                     &kp B      &kp N      &kp M                      &kp COMMA                      &kp PERIOD    &kp SLASH
                                                         &lt 2 BACKSPACE           &kp TAB    &kp ENTER  &lt 1 SPACE
            >;

            label = "Alpha Keys";
        };

        symbol_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &td LS(LG(LC(N4))) DOLLAR      &kp PERCENT    &kp CARET  &kp AMPS  &kp STAR  &kp MINUS  &kp EQUAL
&kp TAB          &kp LESS_THAN  &kp EQUAL  &hm LEFT_GUI LEFT_PARENTHESIS  &kp SQT        &kp COLON  &kp RPAR  &kp LPAR  &kp SEMI   &kp ENTER
&kp TILDE        &kp PLUS       &kp MINUS  &kp GRAVE                      &kp DQT        &kp MINUS  &kp RBKT  &kp LBKT  &kp BSLH   &none
                                           &trans                         &trans         &trans     &trans
            >;

            label = "Symbol Keys";
        };

        number_layer {
            bindings = <
&none           &none             &none         &none         &none     &none            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &none     &none            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&none           &none             &none         &none         &none     &none            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
                                                &trans        &trans    &kp KP_NUMBER_0  &trans
            >;

            label = "Number Keys";
        };

        function_layer {
            bindings = <
&none       &none         &none       &none         &none         &none   &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_PRV  &bt BT_SEL 0  &bt BT_CLR  &bt BT_SEL 1  &bt BT_NXT    &none   &kp F4  &kp F5  &kp F6  &kp F11
&none       &none         &none       &none         &none         &none   &kp F1  &kp F2  &kp F3  &kp F10
                                      &trans        &trans        &trans  &trans
            >;

            label = "Function Keys";
        };
    };
};
