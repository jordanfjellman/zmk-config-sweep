/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E       &kp R                           &kp T                     &kp Y  &kp U       &kp I       &kp O         &kp P
&hm LCTRL A  &hm LSHIFT S  &hm LALT D  &hm LCMD F                      &kp G                     &kp H  &hm RCMD J  &hm RALT K  &hm RSHIFT L  &hm RCTRL SEMI
&kp Z        &kp X         &kp C       &kp V                           &kp B                     &kp N  &kp M       &kp COMMA   &kp PERIOD    &kp SLASH
                                       &mt LC(LS(LA(LCMD))) BACKSPACE  &mt LC(LS(LALT)) ENTER    &to 1  &kp SPACE
            >;
        };

        symbols_layer {
            bindings = <
&kp ESC    &kp AT_SIGN    &kp HASH   &td LS(LG(N4)) DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp STAR  &kp PIPE  &none
&kp TAB    &kp LESS_THAN  &kp EQUAL  &kp GREATER_THAN       &kp SQT        &kp COLON  &kp RPAR   &kp LPAR  &kp SEMI  &kp ENTER
&kp TILDE  &kp PLUS       &kp MINUS  &kp GRAVE              &kp DQT        &kp MINUS  &kp RBKT   &kp LBKT  &kp BSLH  &none
                                     &kp BACKSPACE          &to 0          &to 0      &kp SPACE
            >;
        };

        number_layer {
            bindings = <
&none  &none  &none  &none   &none     &none            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&none  &none  &none  &none   &none     &none            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&none  &none  &none  &none   &none     &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
                     &trans  &trans    &trans           &trans
            >;

            label = "Number Keys";
        };

        function_layer {
            bindings = <
&none       &none         &none       &none         &none         &none   &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_PRV  &bt BT_SEL 0  &bt BT_CLR  &bt BT_SEL 1  &bt BT_NXT    &none   &kp F4  &kp F5  &kp F6  &kp F11
&none       &none         &none       &none         &none         &none   &kp F1  &kp F2  &kp F3  &kp F10
                                      &trans        &trans        &trans  &trans
            >;

            label = "Function Keys";
        };
    };
};
